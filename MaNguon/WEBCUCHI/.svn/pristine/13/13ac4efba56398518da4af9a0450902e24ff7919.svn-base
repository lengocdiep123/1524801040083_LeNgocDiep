using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using WebSchool.BUS;
using WebSchool.Common;
using WebSchool.DAO;

namespace WebSchool.web.Admin
{
    public partial class frT_Taikhoan : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (Session["Role"] == null)
                Response.Redirect("~/web.Admin/Login.aspx");
            if (!IsPostBack)
            {
                pnList.Visible = true;
                pnDangky.Visible = false;
                pnPermission.Visible = false;
                pnChangepass.Visible = false;
                BindGrid();
            }
        }

        public string gioitinh(string obj)
        {
            if (string.Compare(obj, "False") == 0)
                return "Nữ";
            return "Nam";
        }

        public void BindGrid()
        {
            DataTable dt = AccountServices.db.Account_GetByAll();
            grdList.DataSource = dt;
            grdList.DataBind();
        }

        public void BindGridPermission(string UserName)
        {
            DataTable dt = PermissionServices.db.sp_Permission_Account_GetByGroup(UserName);
            grdListquyen.DataSource = dt;
            grdListquyen.DataBind();
        }

        protected void grdList_ItemCommand(object source, DataGridCommandEventArgs e)
        {
            try
            {
                string temp = e.CommandArgument.ToString();

                if (e.CommandName == "Edit")
                {
                    DataTable dt = AccountServices.db.Account_GetByUserName(temp);
                    txtUsername.Text = dt.Rows[0]["Username"].ToString();
                    txtPassword.Visible = false;
                    txtFullname.Text = dt.Rows[0]["fullname"].ToString();
                    if (dt.Rows[0]["gioitinh"].ToString() == "False")
                        ddlGioitinh.SelectedValue = "0";
                    else
                        ddlGioitinh.SelectedValue = "1";

                    btDangky.Text = "Cập nhật";
                    pnList.Visible = false;
                    pnDangky.Visible = true;
                }
                else if (e.CommandName == "Change")
                {
                    DataTable dt = AccountServices.db.Account_GetByUserName(temp);
                    txtUserChange.Text = dt.Rows[0]["Username"].ToString();
                    txtPassChange.Text = "";
                    pnList.Visible = false;
                    pnChangepass.Visible = true;
                }
                else
                {
                    pnList.Visible = false;
                    pnPermission.Visible = true;
                    BindGridPermission(temp);
                    lbUsername.Text = temp;
                }

            }
            catch (Exception ex)
            {
                WebMsgBox.Show("Lỗi " + ex.Message);
            }
        }

        protected void btDangky_Click(object sender, EventArgs e)
        {
            try
            {
                var obj = new AccountInfo();

                obj.Username = txtUsername.Text;
                obj.Password = StringClass.Encrypt(txtPassword.Text);
                obj.fullname = txtFullname.Text;
                obj.gioitinh = ddlGioitinh.SelectedValue;
                obj.ngaysinh = Convert.ToDateTime(txtNgaysinh.Text);
                if (testUsername() > 0 && btDangky.Text == "Tạo tài khoản")
                {
                    AccountServices.db.Account_Insert(obj);
                    BindGrid();
                    pnList.Visible = true;
                    pnDangky.Visible = false;
                }
                else if (btDangky.Text == "Cập nhật")
                {
                    AccountServices.db.Account_Update(obj);
                    BindGrid();
                    pnList.Visible = true;
                    pnDangky.Visible = false;
                }
                else
                {
                    txtUsername.Text = "";
                    WebMsgBox.Show("Tên đăng nhập đã tồn tại");
                }

            }
            catch (Exception ex)
            {
                WebMsgBox.Show("Lỗi trong lúc đăng kí" + ex.Message);
            }
        }

        public int testUsername()
        {
            DataTable dt = AccountServices.db.Account_GetByAll();
            for (int i = 0; i < dt.Rows.Count; i++)
            {
                if (txtUsername.Text.Equals(dt.Rows[i]["UserName"].ToString()))
                {
                    return 0;
                }
            }
            return 1;

        }

        protected void btTaouser_Click(object sender, EventArgs e)
        {
            btDangky.Text = "Tạo tài khoản";
            pnDangky.Visible = true;
            pnList.Visible = false;

        }

        protected void btCapquyen_Click(object sender, EventArgs e)
        {
            try
            {
                var obj = new PermissionInfo();

                obj.Username = lbUsername.Text;
                obj.GroupUsers_ID = ddlQuyen.SelectedValue;
                if (testQuyen(lbUsername.Text) > 0)
                {
                    PermissionServices.db.Permission_Insert(obj);
                    BindGridPermission(lbUsername.Text);
                }
                else
                {
                    WebMsgBox.Show(lbUsername.Text + " đã có quyền " + ddlQuyen.SelectedItem.Text);
                }

            }
            catch (Exception ex)
            {
                WebMsgBox.Show("Lỗi trong lúc đăng kí" + ex.Message);
            }
        }
        int testQuyen(string UserName)
        {
            DataTable dt = PermissionServices.db.Permission_GetByUserName(UserName);
            for (int i = 0; i < dt.Rows.Count; i++)
            {
                if (ddlQuyen.SelectedValue.Equals(dt.Rows[i]["GroupUsers_ID"].ToString()))
                {
                    return 0;
                }
            }
            return 1;
        }

        protected void grdListquyen_ItemCommand(object source, DataGridCommandEventArgs e)
        {
            string temp = e.CommandArgument.ToString();
            try
            {
                if (e.CommandName == "Delete")
                {
                    DataTable dt = PermissionServices.db.Permission_GetByID(temp);
                    PermissionServices.db.Permission_Delete(temp);
                    BindGridPermission(dt.Rows[0]["Username"].ToString());
                }

            }
            catch (Exception ex)
            {
                WebMsgBox.Show("Lỗi " + ex.Message);
            }
        }

        protected void grdList_PageIndexChanged(object source, DataGridPageChangedEventArgs e)
        {
            grdList.CurrentPageIndex = e.NewPageIndex;
            BindGrid();
        }

        protected void btChangepass_Click(object sender, EventArgs e)
        {
            if (txtUserChange.Text != "" && txtPassChange.Text != "")
            {
                AccountServices.db.Account_ChangePassWord(txtUserChange.Text, StringClass.Encrypt(txtPassChange.Text));
                pnList.Visible = true;
                pnChangepass.Visible = false;
            }
            else
                WebMsgBox.Show("Chưa nhập mật khẩu mới");
        }
    }
}